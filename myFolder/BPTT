words = ["Sara", "Mohamed", "Ibrahim", "Fahem"]
word_to_ix = {w: i for i, w in enumerate(words)}
ix_to_word = {i: w for w, i in word_to_ix.items()}
vocab_size = len(words)

def one_hot(idx, size):
    vec = np.zeros((size, 1))
    vec[idx] = 1
    return vec

X_words = ["Mohamed", "Ibrahim", "Fahem"]
target_word = "Sara"
X = [one_hot(word_to_ix[w], vocab_size) for w in X_words]
Y = one_hot(word_to_ix[target_word], vocab_size)

hidden_size = 10
lr = 0.1
epochs = 200

Wxh = np.random.randn(hidden_size, vocab_size) * 0.01
Whh = np.random.randn(hidden_size, hidden_size) * 0.01
Why = np.random.randn(vocab_size, hidden_size) * 0.01
bh = np.zeros((hidden_size, 1))
by = np.zeros((vocab_size, 1))

hs = {}
hs[-1] = np.zeros((hidden_size, 1)) 
for t in range(len(X)):
    hs[t] = np.tanh(np.dot(Wxh, X[t]) + np.dot(Whh, hs[t-1]) + bh)

y = np.dot(Why, hs[len(X)-1]) + by
y_pred = np.exp(y) / np.sum(np.exp(y)) 

loss = -np.log(y_pred[np.argmax(Y)]).item() 
print("Loss:", loss)
print("Predicted word:", ix_to_word[np.argmax(y_pred)])

dWxh = np.zeros_like(Wxh)
dWhh = np.zeros_like(Whh)
dWhy = np.zeros_like(Why)
dbh = np.zeros_like(bh)
dby = np.zeros_like(by)
dh_next = np.zeros_like(hs[0])

dy = y_pred - Y
dWhy += np.dot(dy, hs[len(X)-1].T)
dby += dy
dh = np.dot(Why.T, dy) + dh_next

for t in reversed(range(len(X))):
    dtanh = (1 - hs[t] ** 2) * dh
    dbh += dtanh
    dWxh += np.dot(dtanh, X[t].T)
    dWhh += np.dot(dtanh, hs[t-1].T)
    dh = np.dot(Whh.T, dtanh)

for param, dparam in zip([Wxh, Whh, Why, bh, by],
                         [dWxh, dWhh, dWhy, dbh, dby]):
    param -= lr * dparam


if epoch % 20 == 0 or epoch == 1 or epoch == epochs:
        pred_idx = np.argmax(y_pred)
        print(f"Epoch {epoch:3d} | Loss: {loss:.4f} | Predicted: {ix_to_word[pred_idx]} | Target: {target_word}")
